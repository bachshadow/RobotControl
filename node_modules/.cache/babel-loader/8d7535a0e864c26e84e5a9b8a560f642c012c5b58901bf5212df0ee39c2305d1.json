{"ast":null,"code":"import Blockly from\"blockly\";//import { javascriptGenerator, Order } from \"blockly/javascript\";\nimport{pythonGenerator,Order}from\"blockly/python\";Blockly.Blocks[\"move\"]={init:function(){this.appendDummyInput(\"direction\").appendField(\"direction\").appendField(new Blockly.FieldDropdown([[\"up\",\"up\"],[\"down\",\"down\"]]),\"direction_value\");this.appendDummyInput(\"distance\").appendField(\"distance\").appendField(new Blockly.FieldNumber(0),\"distance_value\");this.appendDummyInput(\"distance\").appendField(\"time\").appendField(new Blockly.FieldNumber(0),\"time_value\");this.setPreviousStatement(true,null);this.setNextStatement(true,null);this.setColour(250);this.setTooltip('');this.setHelpUrl('');}};Blockly.Blocks[\"rotate\"]={init:function(){this.appendDummyInput(\"angle\").appendField(\"angle\").appendField(new Blockly.FieldAngle(0),\"angle_value\");this.setPreviousStatement(true,null);this.setNextStatement(true,null);this.setColour(250);this.setTooltip('');this.setHelpUrl('');}};pythonGenerator.forBlock[\"move\"]=function(block,generator){var value_time=block.getFieldValue('time_value');var value_direction=block.getFieldValue('direction_value');var value_distance=block.getFieldValue('distance_value');var code='robot.move( Direction: '+value_direction+', Distance: '+value_distance+', Time: '+value_time+');\\n';return code;};pythonGenerator.forBlock[\"rotate\"]=function(block,generator){var value_angle=block.getFieldValue('angle_value');var code='robot.rotate( Angel: '+value_angle+');\\n';return code;};","map":{"version":3,"names":["Blockly","pythonGenerator","Order","Blocks","init","appendDummyInput","appendField","FieldDropdown","FieldNumber","setPreviousStatement","setNextStatement","setColour","setTooltip","setHelpUrl","FieldAngle","forBlock","block","generator","value_time","getFieldValue","value_direction","value_distance","code","value_angle"],"sources":["/workspaces/RobotControl/src/customBlocks/custom_Blocks.js"],"sourcesContent":["import Blockly from \"blockly\";\n//import { javascriptGenerator, Order } from \"blockly/javascript\";\nimport { pythonGenerator, Order } from \"blockly/python\"\n\n\nBlockly.Blocks[\"move\"] = {\n  init: function() {\n    this.appendDummyInput(\"direction\")\n    \t.appendField(\"direction\")\n    \t.appendField(new Blockly.FieldDropdown([[\"up\",\"up\"],[\"down\",\"down\"]]),\"direction_value\");\n    this.appendDummyInput(\"distance\")\n    \t.appendField(\"distance\")\n    \t.appendField(new Blockly.FieldNumber(0),\"distance_value\");\n    this.appendDummyInput(\"distance\")\n    \t.appendField(\"time\")\n    \t.appendField(new Blockly.FieldNumber(0),\"time_value\");\n    this.setPreviousStatement(true,null);\n    this.setNextStatement(true,null);\n    this.setColour(250);\n    this.setTooltip('');\n    this.setHelpUrl('');\n  }\n};\nBlockly.Blocks[\"rotate\"] = {\n  init: function() {\n    this.appendDummyInput(\"angle\")\n    \t.appendField(\"angle\")\n    \t.appendField(new Blockly.FieldAngle(0),\"angle_value\")\n    this.setPreviousStatement(true,null);\n    this.setNextStatement(true,null);\n    this.setColour(250);\n    this.setTooltip('');\n    this.setHelpUrl('');\n  }\n};\n\npythonGenerator.forBlock[\"move\"] = function (block, generator) {\n  var value_time = block.getFieldValue('time_value');\n  var value_direction = block.getFieldValue('direction_value');\n  var value_distance = block.getFieldValue('distance_value');\n  var code = 'robot.move( Direction: ' + value_direction + ', Distance: ' + value_distance + ', Time: ' + value_time + ');\\n';\n  return code;\n};\npythonGenerator.forBlock[\"rotate\"] = function (block, generator) {\n  var value_angle = block.getFieldValue('angle_value');\n  var code = 'robot.rotate( Angel: ' + value_angle + ');\\n';\n  return code;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,OAAO,KAAM,SAAS,CAC7B;AACA,OAASC,eAAe,CAAEC,KAAK,KAAQ,gBAAgB,CAGvDF,OAAO,CAACG,MAAM,CAAC,MAAM,CAAC,CAAG,CACvBC,IAAI,CAAE,QAAAA,CAAA,CAAW,CACf,IAAI,CAACC,gBAAgB,CAAC,WAAW,CAAC,CAChCC,WAAW,CAAC,WAAW,CAAC,CACxBA,WAAW,CAAC,GAAI,CAAAN,OAAO,CAACO,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,CACzF,IAAI,CAACF,gBAAgB,CAAC,UAAU,CAAC,CAC/BC,WAAW,CAAC,UAAU,CAAC,CACvBA,WAAW,CAAC,GAAI,CAAAN,OAAO,CAACQ,WAAW,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAC1D,IAAI,CAACH,gBAAgB,CAAC,UAAU,CAAC,CAC/BC,WAAW,CAAC,MAAM,CAAC,CACnBA,WAAW,CAAC,GAAI,CAAAN,OAAO,CAACQ,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CACtD,IAAI,CAACC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CACpC,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,IAAI,CAACC,SAAS,CAAC,GAAG,CAAC,CACnB,IAAI,CAACC,UAAU,CAAC,EAAE,CAAC,CACnB,IAAI,CAACC,UAAU,CAAC,EAAE,CAAC,CACrB,CACF,CAAC,CACDb,OAAO,CAACG,MAAM,CAAC,QAAQ,CAAC,CAAG,CACzBC,IAAI,CAAE,QAAAA,CAAA,CAAW,CACf,IAAI,CAACC,gBAAgB,CAAC,OAAO,CAAC,CAC5BC,WAAW,CAAC,OAAO,CAAC,CACpBA,WAAW,CAAC,GAAI,CAAAN,OAAO,CAACc,UAAU,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CACtD,IAAI,CAACL,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CACpC,IAAI,CAACC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAChC,IAAI,CAACC,SAAS,CAAC,GAAG,CAAC,CACnB,IAAI,CAACC,UAAU,CAAC,EAAE,CAAC,CACnB,IAAI,CAACC,UAAU,CAAC,EAAE,CAAC,CACrB,CACF,CAAC,CAEDZ,eAAe,CAACc,QAAQ,CAAC,MAAM,CAAC,CAAG,SAAUC,KAAK,CAAEC,SAAS,CAAE,CAC7D,GAAI,CAAAC,UAAU,CAAGF,KAAK,CAACG,aAAa,CAAC,YAAY,CAAC,CAClD,GAAI,CAAAC,eAAe,CAAGJ,KAAK,CAACG,aAAa,CAAC,iBAAiB,CAAC,CAC5D,GAAI,CAAAE,cAAc,CAAGL,KAAK,CAACG,aAAa,CAAC,gBAAgB,CAAC,CAC1D,GAAI,CAAAG,IAAI,CAAG,yBAAyB,CAAGF,eAAe,CAAG,cAAc,CAAGC,cAAc,CAAG,UAAU,CAAGH,UAAU,CAAG,MAAM,CAC3H,MAAO,CAAAI,IAAI,CACb,CAAC,CACDrB,eAAe,CAACc,QAAQ,CAAC,QAAQ,CAAC,CAAG,SAAUC,KAAK,CAAEC,SAAS,CAAE,CAC/D,GAAI,CAAAM,WAAW,CAAGP,KAAK,CAACG,aAAa,CAAC,aAAa,CAAC,CACpD,GAAI,CAAAG,IAAI,CAAG,uBAAuB,CAAGC,WAAW,CAAG,MAAM,CACzD,MAAO,CAAAD,IAAI,CACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}